@page
@model IndexModel
@using System.Text.RegularExpressions
@{
    ViewData["Title"] = "Последние новости";
}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">

<div class="container mt-4">
    @if (Model.HasActiveFilters)
    {
        <div class="alert alert-info alert-dismissible fade show mb-3" role="alert">
            Активные фильтры:
            @foreach (var filter in Model.ActiveFilters)
            {
                <span class="badge bg-secondary me-1">@filter</span>
            }
            <a href="?" class="btn-close" aria-label="Close"></a>
        </div>
    }


    <div class="d-flex flex-wrap align-items-center mb-4 gap-2">
        <form method="get" class="flex-grow-1">
            <div class="input-group">
                <input type="text" class="form-control" name="searchQuery"
                       placeholder="Поиск..." value="@Model.SearchQuery">
                <button type="submit" class="btn btn-secondary">
                    <i class="bi bi-search"></i>
                </button>
            </div>
        </form>
        
        <div class="dropdown">
            <form>
                <button class="btn btn-outline-secondary dropdown-toggle" type="button"
                        data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="bi bi-funnel"></i>
                </button>
                <ul class="dropdown-menu p-3" style="min-width: 300px;">
                    <div  class="mb-3">
                        <div class="form-check mb-2">
                            <input class="form-check-input" type="checkbox"
                                   name="HasImages" value="true" id="HasImages"
                            @(Model.HasImages ? "checked" : "")>
                            <label class="form-check-label" for="HasImages">
                                С изображениями
                            </label>
                        </div>
                        <div class="form-check mb-2">
                            <input class="form-check-input" type="checkbox"
                                   name="WithoutImages" value="true" id="WithoutImages"
                            @(Model.WithoutImages ? "checked" : "")>
                            <label class="form-check-label" for="WithoutImages">
                                Без изображений
                            </label>
                        </div>

                        <div class="d-flex gap-2">
                            <button type="submit" class="btn btn-primary flex-grow-1">Применить</button>
                            <a asp-page="./Index" class="btn btn-outline-secondary">Сбросить</a>
                        </div>
                    </div>
                </ul>
            </form>
        </div>

        <div class="dropdown">
            <button class="btn btn-outline-secondary dropdown-toggle" type="button"
                    data-bs-toggle="dropdown" aria-expanded="false">
                <i class="bi bi-calendar-range"></i> 
            </button>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item" href="?lastDays=1">За сутки</a></li>
                <li><a class="dropdown-item" href="?lastDays=7">За неделю</a></li>
                <li><a class="dropdown-item" href="?lastDays=30">За месяц</a></li>
                <li><hr class="dropdown-divider"></li>
                <li><a class="dropdown-item" href="?">Весь период</a></li>
            </ul>
        </div>

        <div class="dropdown">
            <button class="btn btn-outline-secondary dropdown-toggle" type="button"
                    data-bs-toggle="dropdown" aria-expanded="false">
                <i class="bi bi-sort-down"></i> 
            </button>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item" href="?sortOrder=date_desc">Новые → Старые</a></li>
                <li><a class="dropdown-item" href="?sortOrder=date_asc">Старые → Новые</a></li>
                <li><a class="dropdown-item" href="?sortOrder=title">A → Я</a></li>
                <li><a class="dropdown-item" href="?sortOrder=title_desc">Я → A</a></li>
            </ul>
        </div>
    </div>

    @if (!Model.FeedItems.Any())
    {
        <div class="alert alert-warning">
            По вашему запросу ничего не найдено.
            <a href="?" class="alert-link">Сбросить фильтры</a>
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            @foreach (var item in Model.FeedItems)
            {
                <div class="col">
                    <div class="card h-100">
                        <div class="card-body position-relative">
                            <h5 class="card-title">@Html.Raw(item.Title)</h5>
                            <div class="card-text mb-2">
                                @Html.Raw(CleanDescription(item.Description))
                            </div>
                            <div class="mt-auto text-muted small">
                                <div>@item.PublishDate.ToString("dd.MM.yyyy HH:mm")</div>
                                <a href="@item.Link" target="_blank"
                                   class="btn btn-sm btn-outline-primary mt-2">
                                    Читать полностью
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@functions {
    string CleanDescription(string description)
    {
        if (string.IsNullOrEmpty(description))
            return string.Empty;

        var withImages = Regex.Replace(
            description,
            "<img(.*?)>",
            "<div class='rss-image-container mb-3'><img $1 class='rss-image img-fluid rounded' " +
            "loading='lazy' onerror='this.style.display=\"none\"'></div>"
        );

        var withoutOtherTags = Regex.Replace(
            withImages,
            @"<(?!img\b)[^>]*>",
            string.Empty
        );

        return Regex.Replace(withoutOtherTags, @"\s+", " ").Trim();
    }
}